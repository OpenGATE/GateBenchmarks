
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        strategy_name: [t1_edep_profiles,
                        t2_edep_vox,
                        t3_range_e+,
                        t4_necr,
                        t6_dpk,
                        t8_LETActor,
                        t10_SpectroGamma,
                        t11_EMField,
                        t12_tessellated_volume,
                        t13_phsp,
                        t15_optical,
                        t16_decay,
                        t17_extended_source,
                        t18_movement_benchmark,
                        t19_acollinearity,
                        t20_digi_adder,
                        t22_merged_actor,
                        t23_digi_readout,
                        t26_CoinSorter, 
                        t27_Hits_2SD,
                        t28_Singles_2SD,
                        t29_optical_digi,
                        t30_dna,
                        t31_vpgTLE-tt,
                        t32_isotopes,
                        t33_invert_filter,
                        t34_biodose_actor]

    steps:
    - name: Checkout github repo
      uses: actions/checkout@v3
      with:
          lfs: true
    - name: Checkout LFS objects
      run: git lfs checkout
    - name: Checkout submodules
      run: export GIT_SSL_NO_VERIFY=1 && git submodule update --init --recursive
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y gcc \
                                g++ \
                                make \
                                binutils \
                                libx11-dev \
                                libxpm-dev \
                                libxft-dev \
                                libxext-dev \
                                qtbase5-dev \
                                qt5-qmake \
                                git \
                                cmake \
                                libssl-dev \
                                python3.8-dev \
                                ccache 
        gcc -v
        cd
    - name: Run the test in docker
      run: |
        ls $GITHUB_WORKSPACE
        docker run --rm -e "TEST=${{ matrix.strategy_name }}" -v $GITHUB_WORKSPACE:/home tbaudier/gatebenchmarks:9.5 /home/.github/workflows/runTest.sh

